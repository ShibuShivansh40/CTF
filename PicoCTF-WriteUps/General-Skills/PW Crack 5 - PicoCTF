Author: LT 'syreal' Jones
Description

Can you crack the password to get the flag? Download the password checker here and you'll need the encrypted flag and the hash in the same directory too. Here's a dictionary with all possible passwords based on the password conventions we've seen so far.

Hint - 1 : Opening a file in Python is crucial to using the provided dictionary.

Hint - 2 : You may need to trim the whitespace from the dictionary word before hashing. Look up the Python string function, strip

Hint - 3 : The str_xor function does not need to be reverse engineered for this challenge.

First, whenever you get the code try to reverse engineer and it see at least the main functions, that what are they are required to do and how are they doing it?

Here, we need to get the dictionary to get the password. We will burteforce all the password combinations to get the correct one.


I tried alot to traverse and use the strings in "dictionary.txt" directly as the password after removing the whitespaces using ".stirp()" function.

Syntax of Strip : <variable>.strip()

This will remove the whitespaces from the hash.

Then I just changed my approach from directly using the "dictionary.txt" and converted it into the list using ".split()" function.

These concepts helped me to build a new approach to it.

The flag I got was : picoCTF{h45h_sl1ng1ng_36e992a6}
